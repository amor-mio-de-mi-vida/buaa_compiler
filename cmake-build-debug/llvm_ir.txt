declare i32 @getint()          ; 读取一个整数
declare void @putint(i32)      ; 输出一个整数
declare void @putch(i32)       ; 输出一个字符
declare void @putstr(i8*)      ; 输出字符串

define dso_local i32 @main() {
    %temp6 = add i32 2, 0
    %temp7 = add i32 4, 0
    %temp5 = icmp sle i32 %temp6, %temp7
    %temp8 = zext i1 %temp5 to i32
    %temp10 = add i32 0, 0
    %temp9 = icmp ne i32 %temp8, %temp10
    br i1 %temp9, label %temp4, label %temp3

temp4:
    %temp13 = add i32 3, 0
    %temp14 = add i32 0, 0
    %temp12 = icmp ne i32 %temp13, %temp14
    %temp15 = and i1 %temp9, %temp12
    br i1 %temp15, label %temp11, label %temp3

temp11:
    %temp17 = add i32 3, 0
    %temp18 = add i32 0, 0
    %temp16 = icmp sge i32 %temp17, %temp18
    %temp19 = zext i1 %temp16 to i32
    %temp21 = add i32 0, 0
    %temp20 = icmp ne i32 %temp19, %temp21
    %temp22 = and i1 %temp15, %temp20
    br i1 %temp22, label %temp1, label %temp3

temp3:
    %temp26 = add i32 2, 0
    %temp27 = add i32 4, 0
    %temp25 = icmp sle i32 %temp26, %temp27
    %temp28 = zext i1 %temp25 to i32
    %temp30 = add i32 0, 0
    %temp29 = icmp ne i32 %temp28, %temp30
    br i1 %temp29, label %temp24, label %temp23

temp24:
    %temp33 = add i32 4, 0
    %temp34 = add i32 0, 0
    %temp32 = icmp ne i32 %temp33, %temp34
    %temp35 = and i1 %temp29, %temp32
    br i1 %temp35, label %temp31, label %temp23

temp31:
    %temp38 = add i32 0, 0
    %temp39 = add i32 0, 0
    %temp37 = icmp ne i32 %temp38, %temp39
    %temp40 = and i1 %temp35, %temp37
    br i1 %temp40, label %temp36, label %temp23

temp36:
    %temp42 = add i32 2, 0
    %temp43 = add i32 0, 0
    %temp41 = icmp ne i32 %temp42, %temp43
    %temp44 = and i1 %temp40, %temp41
    br i1 %temp44, label %temp1, label %temp23

    %temp45 = or i1 %temp22, %temp44
    br i1 %temp45, label %temp1, label %temp23

temp23:
    %temp48 = add i32 1, 0
    %temp49 = add i32 0, 0
    %temp47 = icmp ne i32 %temp48, %temp49
    br i1 %temp47, label %temp46, label %temp2

temp46:
    %temp51 = add i32 3, 0
    %temp52 = add i32 2, 0
    %temp50 = icmp slt i32 %temp51, %temp52
    %temp53 = zext i1 %temp50 to i32
    %temp55 = add i32 0, 0
    %temp54 = icmp ne i32 %temp53, %temp55
    %temp56 = and i1 %temp47, %temp54
    br i1 %temp56, label %temp1, label %temp2

    %temp57 = or i1 %temp45, %temp56
    br i1 %temp57, label %temp1, label %temp2

temp1:
    call void @putch(i32 116)
    call void @putch(i32 114)
    call void @putch(i32 117)
    call void @putch(i32 101)
    call void @putch(i32 10)
    br label %temp58

temp2:
    call void @putch(i32 102)
    call void @putch(i32 108)
    call void @putch(i32 97)
    call void @putch(i32 115)
    call void @putch(i32 101)
    call void @putch(i32 10)
    br label %temp58

temp58:
    %temp59 = alloca i32
    store i32 0, i32* %temp59
    br label %temp60

temp60:
    %temp67 = add i32 2, 0
    %temp68 = add i32 4, 0
    %temp66 = icmp sle i32 %temp67, %temp68
    %temp69 = zext i1 %temp66 to i32
    %temp71 = add i32 0, 0
    %temp70 = icmp ne i32 %temp69, %temp71
    br i1 %temp70, label %temp65, label %temp64

temp65:
    %temp74 = add i32 3, 0
    %temp75 = add i32 0, 0
    %temp73 = icmp ne i32 %temp74, %temp75
    %temp76 = and i1 %temp70, %temp73
    br i1 %temp76, label %temp72, label %temp64

temp72:
    %temp78 = add i32 3, 0
    %temp79 = add i32 0, 0
    %temp77 = icmp sge i32 %temp78, %temp79
    %temp80 = zext i1 %temp77 to i32
    %temp82 = add i32 0, 0
    %temp81 = icmp ne i32 %temp80, %temp82
    %temp83 = and i1 %temp76, %temp81
    br i1 %temp83, label %temp62, label %temp64

temp64:
    %temp87 = add i32 2, 0
    %temp88 = add i32 4, 0
    %temp86 = icmp sle i32 %temp87, %temp88
    %temp89 = zext i1 %temp86 to i32
    %temp91 = add i32 0, 0
    %temp90 = icmp ne i32 %temp89, %temp91
    br i1 %temp90, label %temp85, label %temp84

temp85:
    %temp94 = add i32 4, 0
    %temp95 = add i32 0, 0
    %temp93 = icmp ne i32 %temp94, %temp95
    %temp96 = and i1 %temp90, %temp93
    br i1 %temp96, label %temp92, label %temp84

temp92:
    %temp99 = add i32 0, 0
    %temp100 = add i32 0, 0
    %temp98 = icmp ne i32 %temp99, %temp100
    %temp101 = and i1 %temp96, %temp98
    br i1 %temp101, label %temp97, label %temp84

temp97:
    %temp103 = add i32 2, 0
    %temp104 = add i32 0, 0
    %temp102 = icmp ne i32 %temp103, %temp104
    %temp105 = and i1 %temp101, %temp102
    br i1 %temp105, label %temp62, label %temp84

    %temp106 = or i1 %temp83, %temp105
    br i1 %temp106, label %temp62, label %temp84

temp84:
    %temp109 = add i32 1, 0
    %temp110 = add i32 0, 0
    %temp108 = icmp ne i32 %temp109, %temp110
    br i1 %temp108, label %temp107, label %temp63

temp107:
    %temp112 = add i32 3, 0
    %temp113 = add i32 2, 0
    %temp111 = icmp slt i32 %temp112, %temp113
    %temp114 = zext i1 %temp111 to i32
    %temp116 = add i32 0, 0
    %temp115 = icmp ne i32 %temp114, %temp116
    %temp117 = and i1 %temp108, %temp115
    br i1 %temp117, label %temp62, label %temp63

    %temp118 = or i1 %temp106, %temp117
    br i1 %temp118, label %temp62, label %temp63

temp61:
    br label %temp60

temp62:
    %temp121 = load i32, i32* %temp59
    %temp122 = add i32 %temp121, 1
    store i32 %temp122, i32* %temp59
    %temp125 = load i32, i32* %temp59
    %temp127 = add i32 1, 0
    %temp126 = icmp sgt i32 %temp125, %temp127
    %temp128 = zext i1 %temp126 to i32
    %temp130 = add i32 0, 0
    %temp129 = icmp ne i32 %temp128, %temp130
    br i1 %temp129, label %temp123, label %temp124

temp123:
    br label %temp63

    br label %temp124

temp124:
    br label %temp61

temp63:
    call void @putch(i32 101)
    call void @putch(i32 110)
    call void @putch(i32 100)
    call void @putch(i32 32)
    call void @putch(i32 102)
    call void @putch(i32 111)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 33)
    call void @putch(i32 32)
    call void @putch(i32 10)
    ret i32 0
}

